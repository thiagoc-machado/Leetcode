class Solution(object):
    def floodFill(self, image, sr, sc, newColor):
        """
        :type image: List[List[int]]
        :type sr: int
        :type sc: int
        :type newColor: int
        :rtype: List[List[int]]
        """
        row = len(image)
        col = len(image[0]) if row else 0
        directions = [[1,0], [-1,0], [0,1], [0,-1]]
        
        def dfs(image, sr, sc, color):
            stack, visited = [[sr, sc]], []
            while stack:
                vertex = stack.pop()
                if vertex not in visited:
                    visited.append(vertex)
                    x, y = vertex[0], vertex[1]
                    for m,n in [[x-1,y], [x+1,y], [x,y-1], [x,y+1]]:
                        if 0 <= m < row and 0 <= n < col:
                            if [m,n] not in visited:
                                if image[m][n] == color:
                                    stack.append([m,n])
            return visited

        for i in dfs(image, sr, sc, image[sr][sc]):
            image[i[0]][i[1]] = newColor
        return image
